from microbit import i2c
font = [
 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422,
 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422,
 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422,
 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422, 0x0022d422,
 0x00000000, 0x000002e0, 0x00018060, 0x00afabea, 0x00aed6ea, 0x01991133, 0x010556aa, 0x00000060,
 0x000045c0, 0x00003a20, 0x00051140, 0x00023880, 0x00002200, 0x00021080, 0x00000100, 0x00111110,
 0x0007462e, 0x00087e40, 0x000956b9, 0x0005d629, 0x008fa54c, 0x009ad6b7, 0x008ada88, 0x00119531,
 0x00aad6aa, 0x0022b6a2, 0x00000140, 0x00002a00, 0x0008a880, 0x00052940, 0x00022a20, 0x0022d422,
 0x00e4d62e, 0x000f14be, 0x000556bf, 0x0008c62e, 0x0007463f, 0x0008d6bf, 0x000094bf, 0x00cac62e,
 0x000f909f, 0x000047f1, 0x0017c629, 0x0008a89f, 0x0008421f, 0x01f1105f, 0x01f4105f, 0x0007462e,
 0x000114bf, 0x000b6526, 0x010514bf, 0x0004d6b2, 0x0010fc21, 0x0007c20f, 0x00744107, 0x01f4111f,
 0x000d909b, 0x00117041, 0x0008ceb9, 0x0008c7e0, 0x01041041, 0x000fc620, 0x00010440, 0x01084210,
 0x00000820, 0x010f4a4c, 0x0004529f, 0x00094a4c, 0x000fd288, 0x000956ae, 0x000097c4, 0x0007d6a2,
 0x000c109f, 0x000003a0, 0x0006c200, 0x0008289f, 0x000841e0, 0x01e1105e, 0x000e085e, 0x00064a4c,
 0x0002295e, 0x000f2944, 0x0001085c, 0x00012a90, 0x010a51e0, 0x010f420e, 0x00644106, 0x01e8221e,
 0x00093192, 0x00222292, 0x00095b52, 0x0008fc80, 0x000003e0, 0x000013f1, 0x00841080, 0x0022d422
]
pageBuf = bytearray(129)
initialised = False
def i2c_write_cmd(cmd):
 i2c.write(0x3C, bytearray([0, cmd]))
def i2c_write_data(data):
 i2c.write(0x3C, bytearray([0x40]) + data)
def set_pos(col=0, page=0):
 i2c_write_cmd(0xB0 | page)
 i2c_write_cmd(0x00 | (col % 16))
 i2c_write_cmd(0x10 | (col >> 4))
def init_display():
 global initialised
 cmds = [
  0xAE, 0xA4, 0xD5, 0xF0, 0xA8, 0x3F, 0xD3, 0x00, 0x00, 0x8D, 0x14,
  0x20, 0x00, 0x21, 0, 127, 0x22, 0, 63, 0xA0 | 0x1, 0xC8, 0xDA, 0x12,
  0x81, 0xCF, 0xD9, 0xF1, 0xDB, 0x40, 0xA6, 0xD6, 0x00, 0xAF
 ]
 for cmd in cmds:
  i2c_write_cmd(cmd)
 initialised = True
 clear_display()
def clear_display():
 for page in range(8):
  set_pos(0, page)
  i2c_write_data(bytearray(128))
def show(input_data, line=0):
 if not initialised:
  init_display()
 pageBuf = bytearray(129)
 pageBuf[0] = 0x40
 input_string = str(input_data) + " "
 y = line
 string_array = [input_string[i:i+26] for i in range(0, len(input_string), 26)]
 for display_string in string_array:
  for i, char in enumerate(display_string):
   char_bytes = font[ord(char)]
   for k in range(5):
    col = sum((1 << (l + 1)) if char_bytes & (1 << (5 * k + l)) else 0 for l in range(5))
    pageBuf[(i * 5) + k + 1] = col
  set_pos(0, y)
  i2c_write_data(pageBuf)
  y += 1